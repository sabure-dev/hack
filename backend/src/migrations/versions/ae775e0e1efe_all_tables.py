"""all tables

Revision ID: ae775e0e1efe
Revises: 376dc5198472
Create Date: 2024-10-26 16:47:56.590834

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ae775e0e1efe'
down_revision: Union[str, None] = '376dc5198472'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('team',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=30), nullable=False),
    sa.Column('city', sa.String(length=30), nullable=False),
    sa.Column('year_formed', sa.String(), server_default=sa.text("to_char((CURRENT_DATE), 'yyyy')"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('match',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('team1', sa.Integer(), nullable=False),
    sa.Column('team2', sa.Integer(), nullable=False),
    sa.Column('winner_team_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['team1'], ['team.id'], ),
    sa.ForeignKeyConstraint(['team2'], ['team.id'], ),
    sa.ForeignKeyConstraint(['winner_team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('date')
    )
    op.create_table('season',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.String(), nullable=False),
    sa.Column('champion_team_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['champion_team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('team_statistics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('total_games', sa.Integer(), nullable=False),
    sa.Column('total_wins', sa.Integer(), nullable=False),
    sa.Column('total_losses', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('award',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('award_name', sa.String(), nullable=False),
    sa.Column('season_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['season_id'], ['season.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('judge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['username'], ['user.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('participant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=20), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['username'], ['user.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('total_score', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('team_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_date', sa.DateTime(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['match_date'], ['match.date'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('score',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('judge_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['judge_id'], ['judge.id'], ),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('score')
    op.drop_table('team_history')
    op.drop_table('result')
    op.drop_table('participant')
    op.drop_table('judge')
    op.drop_table('award')
    op.drop_table('team_statistics')
    op.drop_table('season')
    op.drop_table('match')
    op.drop_table('team')
    # ### end Alembic commands ###
